@misc{GoertzelGeisweillerBlog,
	author = {Ben Goertzel, Nil Geisweiller},
	title = {AI-DSL: Toward a General-Purpose Description Language for AI Agents},
	url = {https://blog.singularitynet.io/ai-dsl-toward-a-general-purpose-description-language-for-ai-agents-21459f691b9e}
}

@misc{YvesHellenschmidt2002,
	author = {Yves Forkl, Michael Hellenschmidt},
	location = {Kloster Irsee, Germany},
	pages = {17--21},
	publisher = {Fraunhofer Institute},
	series = {Tutorial and Research Workshop on Multi-Modal Dialogue in Mobile Environments},
	url={https://core.ac.uk/display/57029957},
	title = {Mastering agent communication in {EMBASSI} on the basis of a formal ontology},
	year = {2002}
}

@misc{martin_translations_nodate,
	author = {Martin, Philippe},
	file = {Translations between RDF+OWL, N3, KIF, UML, FL, FCG and FE:/home/kabir/Zotero/storage/JQ9VDTGT/comparisons.html:text/html},
	language = {English},
	title = {Translations between {RDF}+{OWL}, {N3}, {KIF}, {UML}, {FL}, {FCG} and {FE}},
	url = {http://www.webkb.org/doc/model/comparisons.html},
	urldate = {2021-05-12}
}

@misc{singularitynet_foundation_phasetwo_2021,
	title = {{SingularityNET Foundation}, {PhaseTwo} {Information} {Memorandum}},
	url = {https://rebrand.ly/SNPhase2},
	language = {English},
	publisher = {SingularityNET Foundation},
	month = feb,
	year = {2021},
}

@inproceedings{brady_resource-dependent_2015,
	address = {Cham},
	title = {Resource-{Dependent} {Algebraic} {Effects}},
	isbn = {978-3-319-14675-1},
	abstract = {There has been significant interest in recent months in finding new ways to implement composable and modular effectful programs using handlers of algebraic effects. In my own previous work, I have shown how an algebraic effect system (called effects) can be embedded directly in a dependently typed host language. Using dependent types ought to allow precise reasoning about programs; however, the reasoning capabilities of effects have been limited to simple state transitions which are known at compile-time. In this paper, I show how effects can be extended to support reasoning in the presence of run-time state transitions, where the result may depend on run-time information about resource usage (e.g. whether opening a file succeeded). I show how this can be used to build expressive APIs, and to specify and verify the behaviour of interactive, stateful programs. I illustrate the technique using a file handling API, and an interactive game.},
	booktitle = {Trends in {Functional} {Programming}},
	publisher = {Springer International Publishing},
	author = {Brady, Edwin},
	editor = {Hage, Jurriaan and McCarthy, Jay},
	year = {2015},
	pages = {18--33},
	file = {Brady.2014.RewourceDependentAlgebraicEffects.pdf:/home/kabir/vveitas@gmail.com/library/ai-dsl/Brady.2014.RewourceDependentAlgebraicEffects.pdf:application/pdf},
}

@article{gruber_translation_1993,
	title = {A translation approach to portable ontology specifications},
	volume = {5},
	issn = {1042-8143},
	url = {https://www.sciencedirect.com/science/article/pii/S1042814383710083},
	doi = {https://doi.org/10.1006/knac.1993.1008},
	abstract = {To support the sharing and reuse of formally represented knowledge among AI systems, it is useful to define the common vocabulary in which shared knowledge is represented. A specification of a representational vocabulary for a shared domain of discourse—definitions of classes, relations, functions, and other objects—is called an ontology. This paper describes a mechanism for defining ontologies that are portable over representation systems. Definitions written in a standard format for predicate calculus are translated by a system called Ontolingua into specialized representations, including frame-based systems as well as relational languages. This allows researchers to share and reuse ontologies, while retaining the computational benefits of specialized implementations. We discuss how the translation approach to portability addresses several technical problems. One problem is how to accommodate the stylistic and organizational differences among representations while preserving declarative content. Another is how to translate from a very expressive language into restricted languages, remaining system-independent while preserving the computational efficiency of implemented systems. We describe how these problems are addressed by basing Ontolingua itself on an ontology of domain-independent, representational idioms.},
	number = {2},
	journal = {Knowledge Acquisition},
	author = {Gruber, Thomas R.},
	year = {1993},
	pages = {199--220},
	file = {Gruber.1993.ATranslationApproachToPortableOntologySpecifications.pdf:/home/kabir/vveitas@gmail.com/library/ai-dsl/Gruber.1993.ATranslationApproachToPortableOntologySpecifications.pdf:application/pdf},
}

@InCollection{sep-logic-ontology,
	author       =	{Hofweber, Thomas},
	title        =	{{Logic and Ontology}},
	booktitle    =	{The {Stanford} Encyclopedia of Philosophy},
	editor       =	{Edward N. Zalta},
	howpublished =	{\url{https://plato.stanford.edu/archives/spr2021/entries/logic-ontology/}},
	year         =	{2021},
	edition      =	{{S}pring 2021},
	publisher    =	{Metaphysics Research Lab, Stanford University}
}

@misc{nunet_nunet_2021,
	title = {{NuNet} architecture and service discovery principles (for {AI}-{DSL})},
	url = {https://www.youtube.com/watch?v=GKH9C8pb3yw},
	urldate = {2021-05-26},
	author = {{NuNet}},
	month = may,
	year = {2021}
}

@misc{gRPC,
	title = {{gRPC}, {gRPC Homepage}},
	url = {https://grpc.io/},
	year = {2021}
}

@misc{Protobuf,
	title = {{Protocol Buffers}, {Protocol Buffers Homepage}},
	url = {https://developers.google.com/protocol-buffers/},
	year = {2021}
}

@misc{SNETExampleService,
	title = {{SingularityNET example service}, {example-service GitHub Repository}},
	url = {https://github.com/singnet/example-service},
	year = {2021}
}

@misc{SNETTutorial,
	title = {{SingularityNET Tutorial}, {SingularityNET Tutorial Webpage}},
	url = {https://dev.singularitynet.io/tutorials/publish},
	year = {2021}
}

@misc{Idris,
	title = {{Idris}, {Idris Homepage}},
	url = {https://www.idris-lang.org/},
	year = {2021}
}

@misc{AIDSLRepo,
	title = {{AI-DSL}, {AI-DSL GitHub Repository}},
	url = {https://github.com/singnet/ai-dsl/},
	year = {2021}
}

@misc{SNETDocumentationServiceSetup,
	title = {{SingularityNET Developer Portal}, {Service Setup Web Page}},
	url = {https://dev.singularitynet.io/docs/ai-developers/service-setup/},
	year = {2021}
}

@misc{NuNetFakeNewsWarningAppRepo,
  title = {{NuNet}, {Program Graph of fake News Warning Application}}
  url = {https://gitlab.com/nunet/fake-news-detection/fake\_news\_score/-/blob/master/service/dag.json}
  year = {2021}
}

@inproceedings{kalibatiene_survey_2011,
	address = {Berlin, Heidelberg},
	title = {Survey on {Ontology} {Languages}},
	isbn = {978-3-642-24511-4},
	booktitle = {Perspectives in {Business} {Informatics} {Research}},
	publisher = {Springer Berlin Heidelberg},
	author = {Kalibatiene, Diana and Vasilecas, Olegas},
	editor = {Grabis, Janis and Kirikova, Marite},
	year = {2011},
	pages = {124--141},
	file = {chp3A10.10072F978-3-642-24511-4_10.pdf:/home/kabir/vveitas@gmail.com/library/ai-dsl/chp3A10.10072F978-3-642-24511-4_10.pdf:application/pdf},
}

@unpublished{pease_standard_2009,
	type = {Technical {Report}},
	title = {Standard {Upper} {Ontology} {Knowledge} {Interchange} {Format}},
	url = {http://ontolog.cim3.net/file/resource/reference/SIGMA-kee/suo-kif.pdf},
	language = {English},
	urldate = {2021-05-04},
	author = {Pease, Adam},
	month = jun,
	year = {2009},
}

@inproceedings{NilesPease2001,
author = {Niles, Ian and Pease, Adam},
title = {Towards a Standard Upper Ontology},
year = {2001},
isbn = {1581133774},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/505168.505170},
doi = {10.1145/505168.505170},
booktitle = {Proceedings of the International Conference on Formal Ontology in Information Systems - Volume 2001},
pages = {2–9},
numpages = {8},
keywords = {ontologies, knowledge interchange format},
location = {Ogunquit, Maine, USA},
series = {FOIS '01}
}

@unpublished{pease_sigma_2001,
	title = {The {Sigma} {Ontology} {Development} {Environment}},
	url = {http://www.ceur-ws.org/Vol-71/Pease.pdf},
	language = {English},
	author = {Pease, Adam},
	year = {2001},
	file = {Pease-IJCAI2003 (1).pdf:/home/kabir/vveitas@gmail.com/library/ai-dsl/Pease-IJCAI2003 (1).pdf:application/pdf},
}

@misc{Kaggle_Datasets,
    title = {Fake and Real News dataset }
    url = {https://www.kaggle.com/clmentbisaillon/fake-and-real-news-dataset}
    author = {Ahmed H, Traore I, Saad S}
    Dataset owner = {Clement Bisaillon}
    year = {2021}
}
@misc{Word_embedding,
    title = {Creating Word Embedding: Coding the Word2Vec algorithm in Python using Deep Learning}
    url = {https://towardsdatascience.com/creating-word-embeddings-coding-the-word2vec-algorithm-in-python-using-deep-learning-b337d0ba17a8}
    author = {Eligijus Bujokas}
    year = {2020}
}

